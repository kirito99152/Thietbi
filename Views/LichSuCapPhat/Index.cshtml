@model IEnumerable<Thietbi.Models.TbLichSuCapPhat>

@{
    ViewData["Title"] = "Index";
}
<div class="container mt-4">
    <!-- Card chính bao toàn bộ -->
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            <h2 class="text-center mb-0 fw-bold">LỊCH SỬ CẤP PHÁT</h2>
            <a class="btn btn-success btn-sm fw-bold text-uppercase" asp-action="ExportToExcel">
                <i class="bi bi-file-earmark-excel"></i> Xuất Excel
            </a>
            <button class="btn btn-primary" onclick="showChart()">Hiển thị biểu đồ</button>
        </div>
        <!-- Modal hiển thị biểu đồ -->
        <div class="modal fade" id="chartModal" tabindex="-1" aria-labelledby="chartModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="chartModalLabel">Biểu đồ thống kê thiết bị</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <canvas id="deviceChart" width="400" height="200"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <!-- Bảng -->
            <div class="table-responsive">
                <table id="ntable" class="table table-bordered table-striped align-middle">
                    <thead class="bg-light">
                        <tr class="text-center">
                            <th>STT</th>
                            <th>ID NGƯỜI ĐƯỢC GIAO</th>
                            <th>ID ĐƠN VỊ ĐƯỢC GIAO</th>
                            <th>ID NGƯỜI CẤP PHÁT</th>
                            <th>THỜI GIAN CẤP PHÁT</th>
                            <th>THỜI GIAN THU HỒI</th>
                            <th>GHI CHÚ</th>
                            <th>THIẾT BỊ</th>
                            <th>THAO TÁC</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null && Model.Any())
                        {
                            int stt = 0;
                            foreach (var item in Model)
                            {
                                <tr>
                                    <td class="text-center">@(++stt)</td>
                                    <td>@Html.DisplayFor(modelItem => item.IdNguoiDuocGiao)</td>
                                    <td>@Html.DisplayFor(modelItem => item.IdDonViDuocGiao)</td>
                                    <td>@Html.DisplayFor(modelItem => item.IdNguoiCapPhat)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ThoiGianCapPhat)</td>
                                    <td>@Html.DisplayFor(modelItem => item.ThoiGianThuHoi)</td>
                                    <td>@Html.DisplayFor(modelItem => item.GhiChu)</td>
                                    <td>@Html.DisplayFor(modelItem => item.IdThietBiNavigation.TenThietBi)</td>
                                    <td>
                                        <div class="d-flex justify-content-center gap-2">
                                            <a asp-action="Edit" asp-route-id="@item.IdLichSuCapPhat" class="btn btn-primary btn-sm">
                                                <i class="bi bi-pencil-square"></i> Sửa
                                            </a>
                                            <a asp-action="Details" asp-route-id="@item.IdLichSuCapPhat" class="btn btn-info btn-sm">
                                                <i class="bi bi-info-circle"></i> Chi Tiết
                                            </a>
                                            <a asp-action="Delete" asp-route-id="@item.IdLichSuCapPhat" class="btn btn-danger btn-sm">
                                                <i class="bi bi-trash"></i> Xóa
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="9" class="text-center text-muted">
                                    Không có dữ liệu để hiển thị.
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- CSS tùy chỉnh -->
<style>
    body {
        background-color: #f7f9fc; /* Nền dịu nhẹ */
    }

    .card {
        border-radius: 15px; /* Bo tròn góc */
        overflow: hidden;
    }

    .card-header {
        font-size: 1.5rem; /* Tiêu đề lớn */
        text-transform: uppercase; /* Chữ in hoa */
    }

    .table {
        border-radius: 10px; /* Bo tròn bảng */
        overflow: hidden;
    }

        .table thead th {
            text-transform: uppercase; /* Chữ in hoa trong header */
            font-weight: bold;
        }

        .table tbody tr:hover {
            background-color: #eef3f7; /* Hiệu ứng hover */
        }

    .btn {
        font-size: 0.9rem; /* Kích thước nút */
    }
</style>

<!-- DataTable Script -->
<script>
    new DataTable('#ntable', {
        searching: true,
        paging: true,
        info: true,
        language: {
            search: "Tìm kiếm:",
            lengthMenu: "Hiển thị _MENU_ bản ghi",
            info: "Hiển thị từ _START_ đến _END_ trong tổng số _TOTAL_ bản ghi",
            paginate: {
                first: "Đầu",
                previous: "Trước",
                next: "Sau",
                last: "Cuối"
            },
            zeroRecords: "Không tìm thấy kết quả phù hợp",
            emptyTable: "Không có dữ liệu để hiển thị",
        },
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Hàm lấy dữ liệu từ server
    async function fetchChartData() {
        const response = await fetch('/LichSuCapPhat/GetChartData');
        const data = await response.json();
        return data;
    }

    let chartInstance; // Biến lưu trữ instance của Chart.js

    // Hàm render biểu đồ
    async function renderChart() {
        const chartData = await fetchChartData();
        const labels = chartData.map(item => item.loaiThietBi);
        const data = chartData.map(item => item.soLuong);

        const ctx = document.getElementById('deviceChart').getContext('2d');

        // Nếu đã có instance của biểu đồ, hủy trước khi tạo lại
        if (chartInstance) {
            chartInstance.destroy();
        }

        chartInstance = new Chart(ctx, {
            type: 'bar', // Loại biểu đồ: bar, line, pie, etc.
            data: {
                labels: labels,
                datasets: [{
                    label: 'Số Lượng Thiết Bị',
                    data: data,
                    backgroundColor: [
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(153, 102, 255, 0.2)'
                    ],
                    borderColor: [
                        'rgba(75, 192, 192, 1)',
                        'rgba(255, 99, 132, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(153, 102, 255, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    }

    // Hàm hiển thị modal và render biểu đồ
    function showChart() {
        const modal = new bootstrap.Modal(document.getElementById('chartModal'));
        modal.show();

        // Đợi modal hiển thị hoàn toàn mới render biểu đồ
        document.getElementById('chartModal').addEventListener('shown.bs.modal', renderChart, { once: true });
    }
</script>
